// <auto-generated />
using System;
using InvestmentApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace InvestmentApp.Migrations
{
    [DbContext(typeof(InvestmentAppDbContext))]
    [Migration("20250919003115_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvestmentApp.Common.Models.UserInvestment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<decimal>("AmountInvested")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT_INVESTED");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CURRENT_VALUE");

                    b.Property<Guid>("InvestmentId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("INVESTMENT_ID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("PURCHASE_DATE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("Units")
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("UNITS");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentId");

                    b.HasIndex("UserId");

                    b.ToTable("USER_INVESTMENTS", (string)null);
                });

            modelBuilder.Entity("InvestmentApp.Investimento.Model.Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<decimal>("BaseValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BASE_VALUE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal>("ExpectedYieldPercent")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("EXPECTED_YIELD_PERCENT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("RISK_LEVEL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("INVESTMENTS", (string)null);
                });

            modelBuilder.Entity("InvestmentApp.User.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("ROLE");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("SENHA");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("USERS", (string)null);
                });

            modelBuilder.Entity("InvestmentApp.Common.Models.UserInvestment", b =>
                {
                    b.HasOne("InvestmentApp.Investimento.Model.Investment", "Investment")
                        .WithMany("UserInvestments")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentApp.User.Model.User", "User")
                        .WithMany("UserInvestments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InvestmentApp.Investimento.Model.Investment", b =>
                {
                    b.Navigation("UserInvestments");
                });

            modelBuilder.Entity("InvestmentApp.User.Model.User", b =>
                {
                    b.Navigation("UserInvestments");
                });
#pragma warning restore 612, 618
        }
    }
}
